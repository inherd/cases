@startuml

class __anon054ec27d0108 {
  +uri
  +vars
}

class __anon054ec27d0208 {
  +done
  +status
  +subrequest
}

class __anon054ec27d0308 {
  +index
  +set_handler
  +value
}

class __anon06385c050108 {
  +flushes
  +name
  +ops
}

class __anon06385c050208 {
  +combined_used
  +formats
}

class __anon06385c050308 {
  +event
  +flush
  +gzip
  +last
  +pos
  +start
}

class __anon06385c050408 {
  +lengths
  +values
}

class __anon06385c050508 {
  +disk_full_time
  +error_log_time
  +file
  +filter
  +format
  +script
  +syslog_peer
}

class __anon06385c050608 {
  +logs
  +off
  +open_file_cache
  +open_file_cache_min_uses
  +open_file_cache_valid
}

class __anon06385c050708 {
  +len
  +name
  +run
}

class __anon0726fa500108 {
  +from
}

class __anon0726fa500208 {
  +addr_text
  +sockaddr
  +socklen
}

class __anon08d0a1ef0108 {
  +status
  +valid
}

class __anon08d0a1ef0208 {
  +body_start
  +count
  +deleting
  +error
  +exists
  +expire
  +fs_size
  +key
  +lock_time
  +node
  +purged
  +queue
  +uniq
  +updating
  +uses
  +valid_msec
  +valid_sec
}

class __anon08d0a1ef0308 {
  +body_start
  +crc32
  +date
  +error_sec
  +etag
  +etag_len
  +header_start
  +last_modified
  +updating_sec
  +valid_msec
  +valid_sec
  +variant
  +vary
  +vary_len
  +version
}

class __anon08d0a1ef0408 {
  +cold
  +count
  +loading
  +queue
  +rbtree
  +sentinel
  +size
  +watermark
}

class __anon0be07c1a0108 {
  +gzip_flag
  +index
  +upstream
}

class __anon0be07c1a0208 {
  +key
  +request
  +rest
}

class __anon0d7418f20108 {
  +flags_hi
  +flags_lo
  +ident_hi
  +ident_lo
  +nan_hi
  +nan_lo
  +nar_hi
  +nar_lo
  +nns_hi
  +nns_lo
  +nqs_hi
  +nqs_lo
}

class __anon0d7418f20208 {
  +class_hi
  +class_lo
  +type_hi
  +type_lo
}

class __anon0d7418f20308 {
  +class_hi
  +class_lo
  +len_hi
  +len_lo
  +ttl
  +type_hi
  +type_lo
}

class __anon0d7418f70108 {
  +log
  +read_buf
  +resolver
  +server
  +sockaddr
  +socklen
  +tcp
  +udp
  +write_buf
}

class __anon0d7418f70208 {
  +name
  +priority
  +sockaddr
  +socklen
  +weight
}

class __anon0d7418f70308 {
  +name
  +port
  +priority
  +weight
}

class __anon0d7418f70408 {
  +addrs
  +ctx
  +naddrs
  +name
  +port
  +priority
  +state
  +weight
}

class __anon0d7418f70508 {
  +addr6
  +cnlen
  +code
  +expire
  +last_connection
  +naddrs
  +naddrs6
  +name
  +nlen
  +node
  +nsrvs
  +qlen
  +query
  +query6
  +queue
  +tcp
  +tcp6
  +ttl
  +u
  +u6
  +valid
  +waiting
}

class __anon0db15d4c0108 {
  +bytes_received
  +bytes_sent
  +connect_time
  +header_time
  +peer
  +queue_time
  +response_length
  +response_time
  +status
}

class __anon0db15d4c0208 {
  +headers_in_hash
  +upstreams
}

class __anon0db15d4c0308 {
  +data
  +init
  +init_upstream
}

class __anon0db15d4c0408 {
  +addrs
  +backup
  +down
  +fail_timeout
  +max_conns
  +max_fails
  +naddrs
  +name
  +slow_start
  +weight
}

class __anon0db15d4c0508 {
  +addr
  +transparent
  +value
}

class __anon0db15d4c0608 {
  +buffer_size
  +buffering
  +bufs
  +busy_buffers_size
  +busy_buffers_size_conf
  +cache
  +cache_background_update
  +cache_bypass
  +cache_convert_head
  +cache_lock
  +cache_lock_age
  +cache_lock_timeout
  +cache_max_range_offset
  +cache_methods
  +cache_min_uses
  +cache_purge
  +cache_revalidate
  +cache_use_stale
  +cache_valid
  +cache_value
  +cache_zone
  +change_buffering
  +connect_timeout
  +cyclic_temp_file
  +force_ranges
  +hide_headers
  +hide_headers_hash
  +ignore_client_abort
  +ignore_headers
  +intercept_404
  +intercept_errors
  +limit_rate
  +local
  +max_temp_file_size
  +max_temp_file_size_conf
  +module
  +next_upstream
  +next_upstream_timeout
  +next_upstream_tries
  +no_cache
  +pass_headers
  +pass_request_body
  +pass_request_headers
  +pass_trailers
  +preserve_output
  +read_timeout
  +request_buffering
  +send_lowat
  +send_timeout
  +socket_keepalive
  +ssl
  +ssl_name
  +ssl_server_name
  +ssl_session_reuse
  +ssl_verify
  +store
  +store_access
  +store_lengths
  +store_values
  +temp_file_write_size
  +temp_file_write_size_conf
  +temp_path
  +upstream
}

class __anon0db15d4c0708 {
  +conf
  +copy_handler
  +handler
  +name
  +offset
  +redirect
}

class __anon0db15d4c0808 {
  +accept_ranges
  +cache_control
  +chunked
  +connection
  +connection_close
  +content_encoding
  +content_length
  +content_length_n
  +content_type
  +cookies
  +date
  +etag
  +expires
  +headers
  +last_modified
  +last_modified_time
  +location
  +server
  +status
  +status_line
  +status_n
  +trailers
  +transfer_encoding
  +vary
  +www_authenticate
  +x_accel_expires
  +x_accel_limit_rate
  +x_accel_redirect
}

class __anon0db15d4c0908 {
  +addrs
  +ctx
  +host
  +naddrs
  +name
  +no_port
  +port
  +sockaddr
  +socklen
}

class __anon0db15d4c0a08 {
  +mask
  +status
}

class __anon0db15d4c0b08 {
  +key
  +skip_empty
  +value
}

class __anon0dd344340108 {
  +code
  +lengths
  +name
  +test_dir
  +values
}

class __anon0dd344340208 {
  +try_files
}

class __anon0eda652c0108 {
  +config
  +current
  +data
  +peers
  +tried
}

class __anon1078ea010108 {
  +hash_bucket_size
  +hash_max_size
}

class __anon1078ea010208 {
  +cf
  +default_value
  +hostnames
  +keys
  +no_cacheable
  +regexes
  +values_hash
}

class __anon1078ea010308 {
  +default_value
  +hostnames
  +map
  +value
}

class __anon18c066e30108 {
  +buffer_size
  +enable
  +pass_error_message
  +smtp_auth
  +timeout
  +xclient
}

class __anon19a7dc670108 {
  +err
  +file
  +sent
  +size
  +socket
}

class __anon1b39f5490208 {
}

class __anon1b3f34b60108 {
  +changes
  +events
}

class __anon2467f5b70108 {
  +city
  +city_v6
  +country
  +country_v6
  +org
  +org_v6
  +proxies
  +proxy_recursive
}

class __anon2467f5b70208 {
  +data
  +name
}

class __anon24ac72e20108 {
  +profiles
}

class __anon29a017a50108 {
  +conf_file
  +data
  +len
  +level
  +line
  +loader
  +manager
  +name
  +purger
}

class __anon29a017a50208 {
  +level
  +name
}

class __anon29a017a50308 {
  +access
  +clean
  +file
  +log_level
  +offset
  +path
  +persistent
  +pool
  +thread_write
  +warn
}

class __anon29a017a50408 {
  +access
  +create_path
  +delete_file
  +fd
  +log
  +path_access
  +time
}

class __anon29a017a50508 {
  +access
  +buf_size
  +log
  +size
  +time
}

class __anon2dbd88490108 {
  +len
  +name
  +value
}

class __anon2dbd88490208 {
  +buckets
  +size
}

class __anon2dbd88490308 {
  +hash
  +value
}

class __anon2dbd88490408 {
  +key
  +key_hash
  +value
}

class __anon2dbd88490508 {
  +hash
  +wc_head
  +wc_tail
}

class __anon2dbd88490608 {
  +bucket_size
  +hash
  +key
  +max_size
  +name
  +pool
  +temp_pool
}

class __anon2dbd88490708 {
  +dns_wc_head
  +dns_wc_head_hash
  +dns_wc_tail
  +dns_wc_tail_hash
  +hsize
  +keys
  +keys_hash
  +pool
  +temp_pool
}

class __anon2dbd88490808 {
  +hash
  +key
  +lowcase_key
  +value
}

class __anon30f675350208 {
  +addr
  +mask
}

class __anon30f675350308 {
  +addr
  +mask
}

class __anon30f675350408 {
  +family
  +u
}

class __anon30f675350608 {
  +name
  +sockaddr
  +socklen
}

class __anon30f675350708 {
  +addrs
  +default_port
  +err
  +family
  +host
  +last_port
  +listen
  +naddrs
  +no_port
  +no_resolve
  +port
  +port_text
  +sockaddr
  +socklen
  +uri
  +uri_part
  +url
  +wildcard
}

class __anon31649eeb0108 {
  +acv
  +angle
  +buffer_size
  +filter
  +hcv
  +height
  +interlace
  +jpeg_quality
  +jqcv
  +sharpen
  +shcv
  +transparency
  +wcv
  +webp_quality
  +width
  +wqcv
}

class __anon31649eeb0208 {
  +angle
  +force
  +height
  +image
  +last
  +length
  +max_height
  +max_width
  +phase
  +type
  +width
}

class __anon318717e70108 {
  +add
  +browser
  +name
  +skip
}

class __anon318717e70208 {
  +add
  +name
  +skip
  +version
}

class __anon318717e70308 {
  +ancient_browser_value
  +ancient_browsers
  +modern_browser_value
  +modern_browsers
  +modern_unlisted_browsers
  +netscape4
}

class __anon32629fff0108 {
  +addrs
  +cert
  +host
  +issuer
  +loading
  +naddrs
  +name
  +port
  +refresh
  +resolver
  +resolver_timeout
  +ssl_ctx
  +staple
  +timeout
  +uri
  +valid
  +verify
}

class __anon32629fff0208 {
  +addrs
  +depth
  +host
  +naddrs
  +port
  +resolver
  +resolver_timeout
  +shm_zone
  +uri
}

class __anon32629fff0308 {
  +expire_queue
  +rbtree
  +sentinel
}

class __anon32629fff0408 {
  +node
  +queue
  +status
  +valid
}

class __anon364b30e50108 {
  +caches
}

class __anon364b30e50308 {
  +cookie
  +flags
  +regex
}

class __anon364b30e50508 {
  +host_header
  +key_start
  +port
  +schema
  +uri
}

class __anon364b30e50608 {
  +flushes
  +hash
  +lengths
  +values
}

class __anon364b30e50708 {
  +body_flushes
  +body_lengths
  +body_source
  +body_values
  +cache_key
  +cookie_domains
  +cookie_flags
  +cookie_paths
  +headers
  +headers_cache
  +headers_hash_bucket_size
  +headers_hash_max_size
  +headers_source
  +http_version
  +location
  +method
  +proxy_lengths
  +proxy_values
  +redirect
  +redirects
  +ssl
  +ssl_certificate
  +ssl_certificate_key
  +ssl_ciphers
  +ssl_conf_commands
  +ssl_crl
  +ssl_passwords
  +ssl_protocols
  +ssl_trusted_certificate
  +ssl_verify_depth
  +upstream
  +url
  +vars
}

class __anon364b30e50808 {
  +busy
  +chunked
  +free
  +head
  +header_sent
  +internal_body_length
  +internal_chunked
  +status
  +vars
}

class __anon3772d1640108 {
  +peer
  +range
}

class __anon3772d1640208 {
  +ranges
  +two
}

class __anon3772d1640308 {
  +conf
  +rrp
  +tries
}

class __anon37a321e10108 {
  +last
  +nalloc
  +part
  +pool
  +size
}

class __anon39d74ab40108 {
  +main_conf
  +srv_conf
}

class __anon39d74ab40208 {
  +addr_text
  +backlog
  +bind
  +ctx
  +ipv6only
  +proxy_protocol
  +rcvbuf
  +reuseport
  +sndbuf
  +so_keepalive
  +sockaddr
  +socklen
  +ssl
  +tcp_keepcnt
  +tcp_keepidle
  +tcp_keepintvl
  +type
  +wildcard
}

class __anon39d74ab40308 {
  +addr_text
  +ctx
  +proxy_protocol
  +ssl
}

class __anon39d74ab40408 {
  +addr
  +conf
}

class __anon39d74ab40508 {
  +addr6
  +conf
}

class __anon39d74ab40608 {
  +addrs
  +naddrs
}

class __anon39d74ab40708 {
  +addrs
  +family
  +port
  +type
}

class __anon39d74ab40808 {
  +opt
}

class __anon39d74ab40a08 {
  +handlers
}

class __anon39d74ab40b08 {
  +handlers
}

class __anon39d74ab40c08 {
  +listen
  +ncaptures
  +phase_engine
  +phases
  +prefix_variables
  +servers
  +variables
  +variables_hash
  +variables_hash_bucket_size
  +variables_hash_max_size
  +variables_keys
}

class __anon39d74ab40d08 {
  +ctx
  +error_log
  +file_name
  +handler
  +line
  +listen
  +preread_buffer_size
  +preread_timeout
  +proxy_protocol_timeout
  +resolver
  +resolver_timeout
  +tcp_nodelay
}

class __anon39d74ab40e08 {
  +create_main_conf
  +create_srv_conf
  +init_main_conf
  +merge_srv_conf
  +postconfiguration
  +preconfiguration
}

class __anon40b253840108 {
  +config
  +current
  +data
  +peers
  +tried
}

class __anon40ef635c0108 {
  +code
  +count
  +end
  +http_version
  +start
}

class __anon4216959b0108 {
  +enable
}

class __anon42bd8a850108 {
  +addr
  +deny
  +mask
}

class __anon42bd8a850208 {
  +addr
  +deny
  +mask
}

class __anon42bd8a850308 {
  +deny
}

class __anon42bd8a850408 {
  +rules
  +rules6
  +rules_un
}

class __anon42cff9400108 {
  +emit
  +ending
  +next
  +sym
}

class __anon435552aa0108 {
  +auth_methods
  +capabilities
  +capability
  +client_buffer_size
  +greeting
  +greeting_delay
  +server_name
  +starttls_capability
  +starttls_only_capability
}

class __anon43bd7fcd0108 {
  +auth_methods
  +capabilities
  +capability
  +client_buffer_size
  +starttls_capability
  +starttls_only_capability
}

class __anon441e7f590108 {
  +lock
  +wait
}

class __anon441e7f590208 {
  +lock
  +sem
  +semaphore
  +spin
  +wait
}

class __anon44490fab0108 {
  +create_conf
  +init_conf
  +name
}

class __anon47da29f20108 {
  +a
  +b
  +buffer
  +bytes
  +c
  +d
  +e
  +f
}

class __anon48235c670108 {
  +fails
  +reqs
  +total
  +used
}

class __anon48235c670208 {
  +addr
  +data
  +end
  +free
  +last
  +lock
  +log_ctx
  +log_nomem
  +min_shift
  +min_size
  +mutex
  +pages
  +pfree
  +start
  +stats
  +zero
}

class __anon484426f40108 {
  +peer
  +range
}

class __anon484426f40208 {
  +ranges
  +two
}

class __anon484426f40308 {
  +conf
  +rrp
  +tries
}

class __anon4bf034530108 {
  +text
}

class __anon4bf034530208 {
  +out
}

class __anon4c1d72720108 {
  +length
  +name
  +tables
  +utf8
}

class __anon4c1d72720208 {
  +dst
  +src
}

class __anon4c1d72720308 {
  +dst
  +dst2src
  +src
  +src2dst
}

class __anon4c1d72720408 {
  +charsets
  +recodes
  +tables
}

class __anon4c1d72720508 {
  +charset
  +override_charset
  +source_charset
  +types
  +types_keys
}

class __anon4c1d72720608 {
  +busy
  +charset
  +charset_name
  +free_buffers
  +free_bufs
  +from_utf8
  +length
  +saved
  +saved_len
  +table
  +to_utf8
}

class __anon4c1d72720708 {
  +characters
  +charset
  +table
}

class __anon4c74800e0108 {
  +end
  +start
  +value
}

class __anon4c74800e0208 {
  +tree
  +tree6
}

class __anon4c74800e0308 {
  +default_value
  +low
}

class __anon4c74800e0408 {
  +offset
  +sn
  +value
}

class __anon4c74800e0508 {
  +allow_binary_include
  +binary_include
  +data_size
  +entries
  +high
  +include_name
  +includes
  +net
  +outside_entries
  +pool
  +ranges
  +rbtree
  +sentinel
  +temp_pool
  +tree
  +tree6
  +value
}

class __anon4c74800e0608 {
  +index
  +u
}

class __anon4c74800e0808 {
  +crc32
  +endianness
  +GEORNG
  +ptr_size
  +version
}

class __anon4e23fa960108 {
  +acceptex_read
  +post_acceptex
  +threads
}

class __anon4e70eab40108 {
  +capture
  +index
}

class __anon4e70eab40208 {
  +name
  +ncaptures
  +nvariables
  +regex
  +variables
}

class __anon4e70eab40308 {
  +regex
  +value
}

class __anon4e70eab40408 {
  +hash
  +nregex
  +regex
}

class __anon50cc80880108 {
  +buf
  +flushed
  +ip
  +line
  +pos
  +session
  +skip
  +sp
}

class __anon50cc80880208 {
  +cf
  +complete_lengths
  +complete_values
  +conf_prefix
  +flushes
  +lengths
  +main
  +ncaptures
  +root_prefix
  +size
  +source
  +values
  +variables
  +zero
}

class __anon50cc80880308 {
  +flushes
  +lengths
  +u
  +value
  +values
}

class __anon50cc80880508 {
  +cf
  +complex_value
  +conf_prefix
  +root_prefix
  +value
  +zero
}

class __anon50cc80880608 {
  +code
  +len
}

class __anon50cc80880708 {
  +code
  +index
}

class __anon50cc80880808 {
  +code
  +n
}

class __anon50cc80880908 {
  +code
  +conf_prefix
}

class __anon5383e00c0108 {
  +capture
  +index
}

class __anon5383e00c0208 {
  +name
  +ncaptures
  +nvariables
  +regex
  +variables
}

class __anon5383e00c0308 {
  +regex
  +value
}

class __anon5383e00c0408 {
  +hash
  +nregex
  +regex
}

class __anon54eb218d0108 {
  +portev_events
  +portev_object
  +portev_pad
  +portev_source
  +portev_user
}

class __anon54eb218d0208 {
  +events
}

class __anon559b32d80108 {
  +builtin_session_cache
  +certificate_keys
  +certificates
  +ciphers
  +client_certificate
  +conf_commands
  +crl
  +dhparam
  +ecdh_curve
  +enable
  +file
  +line
  +listen
  +passwords
  +prefer_server_ciphers
  +protocols
  +session_ticket_keys
  +session_tickets
  +session_timeout
  +shm_zone
  +ssl
  +starttls
  +trusted_certificate
  +verify
  +verify_depth
}

class __anon55ac6f5b0108 {
  +lengths
  +name
  +values
}

class __anon55ac6f5b0208 {
  +indices
  +max_index_len
}

class __anon567fde750108 {
  +flushes
  +name
  +ops
}

class __anon567fde750208 {
  +formats
}

class __anon567fde750308 {
  +event
  +flush
  +gzip
  +last
  +pos
  +start
}

class __anon567fde750408 {
  +lengths
  +values
}

class __anon567fde750508 {
  +disk_full_time
  +error_log_time
  +file
  +filter
  +format
  +script
  +syslog_peer
}

class __anon567fde750608 {
  +logs
  +off
  +open_file_cache
  +open_file_cache_min_uses
  +open_file_cache_valid
}

class __anon567fde750708 {
  +len
  +name
  +run
}

class __anon57f86ee00108 {
  +percent
  +value
}

class __anon57f86ee00208 {
  +parts
  +value
}

class __anon57fb3e840208 {
  +handler
  +name
  +offset
}

class __anon57fb3e840308 {
  +name
  +offset
}

class __anon57fb3e840408 {
  +accept
  +accept_encoding
  +accept_language
  +authorization
  +chrome
  +chunked
  +connection
  +connection_type
  +content_length
  +content_length_n
  +content_range
  +content_type
  +cookies
  +date
  +depth
  +destination
  +expect
  +gecko
  +headers
  +host
  +if_match
  +if_modified_since
  +if_none_match
  +if_range
  +if_unmodified_since
  +keep_alive
  +keep_alive_n
  +konqueror
  +msie
  +msie6
  +opera
  +overwrite
  +passwd
  +range
  +referer
  +safari
  +server
  +te
  +transfer_encoding
  +upgrade
  +user
  +user_agent
  +via
  +x_forwarded_for
  +x_real_ip
}

class __anon57fb3e840508 {
  +accept_ranges
  +cache_control
  +charset
  +content_encoding
  +content_length
  +content_length_n
  +content_offset
  +content_range
  +content_type
  +content_type_hash
  +content_type_len
  +content_type_lowcase
  +date
  +date_time
  +etag
  +expires
  +headers
  +last_modified
  +last_modified_time
  +link
  +location
  +override_charset
  +refresh
  +server
  +status
  +status_line
  +trailers
  +www_authenticate
}

class __anon57fb3e840608 {
  +buf
  +bufs
  +busy
  +chunked
  +free
  +post_handler
  +received
  +rest
  +temp_file
}

class __anon57fb3e840708 {
  +addr_conf
  +busy
  +conf_ctx
  +free
  +nbusy
  +proxy_protocol
  +ssl
  +ssl_servername
  +ssl_servername_regex
}

class __anon57fb3e840808 {
  +data
  +handler
}

class __anon57fb3e840908 {
  +terminal_posted_request
}

class __anon5999bd500108 {
  +percent
  +value
}

class __anon5999bd500208 {
  +parts
  +value
}

class __anon5ae93c9a0108 {
  +exists
  +name
  +size
  +value
}

class __anon5dcc045a0108 {
  +addr
  +exists
  +handle
  +log
  +name
  +size
}

class __anon5e39e3180108 {
  +size
}

class __anon5e39e3180208 {
  +active
  +end
  +etag
  +last
  +range
  +sr
  +start
}

class __anon5e39e3180308 {
  +complete_length
  +end
  +start
}

class __anon60a5a9e40108 {
  +caches
}

class __anon60a5a9e40208 {
  +flushes
  +hash
  +lengths
  +number
  +values
}

class __anon60a5a9e40308 {
  +cache_key
  +catch_stderr
  +fastcgi_lengths
  +fastcgi_values
  +index
  +keep_conn
  +params
  +params_cache
  +params_source
  +split_name
  +split_regex
  +upstream
}

class __anon60a5a9e40508 {
  +end
  +start
}

class __anon60a5a9e40608 {
  +busy
  +closed
  +fastcgi_stdout
  +free
  +header_sent
  +large_stderr
  +last
  +length
  +padding
  +path_info
  +pos
  +rest
  +script_name
  +split_parts
  +state
  +type
}

class __anon60a5a9e40708 {
  +content_length_hi
  +content_length_lo
  +padding_length
  +request_id_hi
  +request_id_lo
  +reserved
  +type
  +version
}

class __anon60a5a9e40808 {
  +flags
  +reserved
  +role_hi
  +role_lo
}

class __anon60a5a9e40908 {
  +request_id_hi
  +request_id_lo
  +type
  +version
}

class __anon60a5a9e40a08 {
  +br
  +h0
  +h1
}

class __anon60c06c710108 {
  +hash_bucket_size
  +hash_max_size
}

class __anon60c06c710208 {
  +cf
  +default_value
  +hostnames
  +keys
  +no_cacheable
  +regexes
  +values_hash
}

class __anon60c06c710308 {
  +default_value
  +hostnames
  +map
  +value
}

class __anon661dcb170108 {
  +md5
  +secret
  +variable
}

class __anon661dcb170208 {
  +expires
}

class __anon67ee1e2a0108 {
  +command
  +fd
  +pid
  +slot
}

class __anon6a2beae20108 {
  +flags
  +recv
  +recv_chain
  +send
  +send_chain
  +udp_recv
  +udp_send
  +udp_send_chain
}

class __anon6d1515d30108 {
  +data
  +name
}

class __anon6d1515d30208 {
  +dtd_files
  +sheet_files
}

class __anon6d1515d30308 {
  +name
  +quote
  +value
}

class __anon6d1515d30408 {
  +params
  +stylesheet
}

class __anon6d1515d30508 {
  +dtd
  +last_modified
  +params
  +sheets
  +types
  +types_keys
}

class __anon6d1515d30608 {
  +ctxt
  +doc
  +done
  +params
  +request
  +transform
}

class __anon6d5d54470108 {
  +enabled
}

class __anon6d5d54470208 {
  +alpn
  +buf
  +dst
  +ext
  +host
  +left
  +log
  +pool
  +pos
  +size
  +state
  +version
}

class __anon6e8770bc0108 {
  +data
  +len
}

class __anon6e8770bc0208 {
  +key
  +value
}

class __anon6e8770bc0308 {
  +data
  +escape
  +len
  +no_cacheable
  +not_found
  +valid
}

class __anon6e8770bc0408 {
  +node
  +str
}

class __anon6f3bcb730108 {
  +family_transport
  +len
  +signature
  +version_command
}

class __anon6f3bcb730208 {
  +dst_addr
  +dst_port
  +src_addr
  +src_port
}

class __anon6f3bcb730308 {
  +dst_addr
  +dst_port
  +src_addr
  +src_port
}

class __anon702a085e0108 {
  +access
  +create_full_put_path
  +methods
  +min_delete_depth
}

class __anon702a085e0208 {
  +len
  +path
}

class __anon7171ee2a0108 {
  +buffer
  +dump
  +file
  +line
}

class __anon7171ee2a0208 {
  +buffer
  +name
}

class __anon7171ee2a0308 {
  +post_handler
}

class __anon7171ee2a0408 {
  +new_name
  +old_name
  +post_handler
}

class __anon7171ee2a0508 {
  +high
  +low
  +post_handler
}

class __anon7171ee2a0608 {
  +name
  +value
}

class __anon7171ee2a0708 {
  +mask
  +name
}

class __anon721bdd310108 {
  +loc_conf
  +main_conf
  +srv_conf
}

class __anon721bdd310208 {
  +create_loc_conf
  +create_main_conf
  +create_srv_conf
  +init_main_conf
  +merge_loc_conf
  +merge_srv_conf
  +postconfiguration
  +preconfiguration
}

class __anon72796b440108 {
  +exists
  +name
  +size
  +value
}

class __anon72daf01f0108 {
  +exiting
  +handle
  +just_spawn
  +name
  +pid
  +quit
  +quit_event
  +reopen
  +reopen_event
  +term
  +term_event
}

class __anon72daf01f0208 {
  +args
  +argv
  +child
  +envp
  +name
  +path
}

class __anon741a72350108 {
  +content_range
  +end
  +start
}

class __anon741a72350208 {
  +boundary_header
  +offset
  +ranges
}

class __anon775a18330108 {
  +addr
  +fd
  +handle
  +log
  +name
  +size
}

class __anon775a18330208 {
  +dir
  +finddata
  +ready
  +type
  +valid_info
}

class __anon775a18330308 {
  +dir
  +finddata
  +last
  +log
  +name
  +no_match
  +pattern
  +ready
  +test
}

class __anon79983fcc0108 {
  +free
  +pool
  +root
  +size
  +start
}

class __anon7f66bc5f0108 {
  +delay
  +handler
  +name
}

class __anon7fc32c250108 {
  +sbrk_size
}

class __anon7fc32c250208 {
  +degrade
}

class __anon807879d20108 {
  +match
  +value
}

class __anon807879d20208 {
  +match
  +value
}

class __anon807879d20308 {
  +index
  +max_match_len
  +min_match_len
  +shift
}

class __anon807879d20408 {
  +dynamic
  +last_modified
  +matches
  +once
  +pairs
  +tables
  +types
  +types_keys
}

class __anon807879d20508 {
  +applied
  +buf
  +busy
  +copy_end
  +copy_start
  +free
  +in
  +index
  +last_out
  +looked
  +matches
  +offset
  +once
  +out
  +pos
  +saved
  +sub
  +tables
}

class __anon80b94de00108 {
  +from
  +hash
  +header
  +recursive
  +type
}

class __anon80b94de00208 {
  +addr_text
  +connection
  +sockaddr
  +socklen
}

class __anon82b6799e0108 {
  +engine
}

class __anon82b679a30108 {
  +expire_queue
  +sentinel
  +session_rbtree
}

class __anon82b679a30208 {
  +aes_key
  +hmac_key
  +name
  +size
}

class __anon833199e90108 {
  +color
  +count
  +data
  +dummy
  +excess
  +last
  +len
  +queue
}

class __anon833199e90208 {
  +queue
  +rbtree
  +sentinel
}

class __anon833199e90308 {
  +key
  +node
  +rate
  +sh
  +shpool
}

class __anon833199e90408 {
  +burst
  +delay
  +shm_zone
}

class __anon833199e90508 {
  +delay_log_level
  +dry_run
  +limit_log_level
  +limits
  +status_code
}

class __anon841e118f0108 {
  +flushes
  +hash
  +lengths
  +values
}

class __anon841e118f0208 {
  +grpc_lengths
  +grpc_values
  +headers
  +headers_source
  +host
  +host_set
  +ssl
  +ssl_certificate
  +ssl_certificate_key
  +ssl_ciphers
  +ssl_conf_commands
  +ssl_crl
  +ssl_passwords
  +ssl_protocols
  +ssl_trusted_certificate
  +ssl_verify_depth
  +upstream
}

class __anon841e118f0408 {
  +init_window
  +last_stream_id
  +recv_window
  +send_window
}

class __anon841e118f0508 {
  +busy
  +connection
  +done
  +end_stream
  +error
  +field_end
  +field_huffman
  +field_length
  +field_rest
  +field_state
  +flags
  +fragment_state
  +frame_state
  +free
  +header_sent
  +host
  +id
  +in
  +index
  +length
  +literal
  +name
  +out
  +output_blocked
  +output_closed
  +padding
  +parsing_headers
  +ping_data
  +pings
  +recv_window
  +request
  +rest
  +rst
  +send_window
  +setting_id
  +setting_value
  +settings
  +state
  +status
  +stream_id
  +type
  +value
  +window_update
}

class __anon841e118f0608 {
  +flags
  +length_0
  +length_1
  +length_2
  +stream_id_0
  +stream_id_1
  +stream_id_2
  +stream_id_3
  +type
}

class __anon8687945a0108 {
  +buffer_size
  +builtin_session_cache
  +certificate_key_values
  +certificate_keys
  +certificate_values
  +certificates
  +ciphers
  +client_certificate
  +conf_commands
  +crl
  +dhparam
  +early_data
  +ecdh_curve
  +enable
  +file
  +line
  +ocsp
  +ocsp_cache_zone
  +ocsp_responder
  +passwords
  +prefer_server_ciphers
  +protocols
  +reject_handshake
  +session_ticket_keys
  +session_tickets
  +session_timeout
  +shm_zone
  +ssl
  +stapling
  +stapling_file
  +stapling_responder
  +stapling_verify
  +trusted_certificate
  +verify
  +verify_depth
}

class __anon8a2885440108 {
  +method
  +name
}

class __anon8a2885490108 {
  +accept_filter
  +addr_text
  +backlog
  +bind
  +default_server
  +deferred_accept
  +fastopen
  +http2
  +ipv6only
  +proxy_protocol
  +rcvbuf
  +reuseport
  +set
  +setfib
  +sndbuf
  +so_keepalive
  +sockaddr
  +socklen
  +ssl
  +tcp_keepcnt
  +tcp_keepidle
  +tcp_keepintvl
  +wildcard
}

class __anon8a2885490308 {
  +handlers
  +location_rewrite_index
  +server_rewrite_index
}

class __anon8a2885490408 {
  +handlers
}

class __anon8a2885490508 {
  +headers_in_hash
  +ncaptures
  +phase_engine
  +phases
  +ports
  +prefix_variables
  +server_names_hash_bucket_size
  +server_names_hash_max_size
  +servers
  +variables
  +variables_hash
  +variables_hash_bucket_size
  +variables_hash_max_size
  +variables_keys
}

class __anon8a2885490608 {
  +captures
  +client_header_buffer_size
  +client_header_timeout
  +connection_pool_size
  +ctx
  +file_name
  +ignore_invalid_headers
  +large_client_header_buffers
  +line
  +listen
  +merge_slashes
  +named_locations
  +request_pool_size
  +server_name
  +server_names
  +underscores_in_headers
}

class __anon8a2885490708 {
  +name
  +regex
  +server
}

class __anon8a2885490808 {
  +names
  +nregex
  +regex
}

class __anon8a2885490908 {
  +addr
  +conf
}

class __anon8a2885490a08 {
  +addr6
  +conf
}

class __anon8a2885490b08 {
  +addrs
  +naddrs
}

class __anon8a2885490c08 {
  +addrs
  +family
  +port
}

class __anon8a2885490d08 {
  +default_server
  +hash
  +nregex
  +opt
  +regex
  +servers
  +wc_head
  +wc_tail
}

class __anon8a2885490e08 {
  +args
  +overwrite
  +status
  +value
}

class __anon8a2885490f08 {
  +exact
  +file_name
  +inclusive
  +line
  +list
  +name
  +queue
}

class __anon8b5465240108 {
  +handler
  +name
  +offset
}

class __anon8b5465240308 {
  +expires
  +expires_time
  +expires_value
  +headers
  +trailers
}

class __anon8c567eff0108 {
  +index
  +name
  +offset
}

class __anon9363dab20108 {
  +caches
}

class __anon9363dab20208 {
  +flushes
  +hash
  +lengths
  +number
  +values
}

class __anon9363dab20308 {
  +cache_key
  +modifier1
  +modifier2
  +params
  +params_cache
  +params_source
  +ssl
  +ssl_certificate
  +ssl_certificate_key
  +ssl_ciphers
  +ssl_conf_commands
  +ssl_crl
  +ssl_passwords
  +ssl_protocols
  +ssl_trusted_certificate
  +ssl_verify_depth
  +upstream
  +uwsgi_lengths
  +uwsgi_string
  +uwsgi_values
}

class __anon936595c70108 {
  +gmtoff
  +msec
  +sec
}

class __anon9b68bd150108 {
  +cpu_affinity
  +cpu_affinity_auto
  +cpu_affinity_n
  +daemon
  +debug_points
  +env
  +environment
  +group
  +lock_file
  +master
  +oldpid
  +pid
  +priority
  +rlimit_core
  +rlimit_nofile
  +shutdown_timeout
  +timer_resolution
  +transparent
  +user
  +username
  +worker_processes
  +working_directory
}

class __anon9ec9dec20108 {
  +bufs
  +enable
  +level
  +memlevel
  +min_length
  +no_buffer
  +postpone_gzipping
  +types
  +types_keys
  +wbits
}

class __anon9ec9dec20208 {
  +allocated
  +buffering
  +bufs
  +busy
  +copied
  +copy_buf
  +done
  +flush
  +free
  +free_mem
  +in
  +in_buf
  +intel
  +last_out
  +memlevel
  +nomem
  +out
  +out_buf
  +preallocated
  +redo
  +request
  +wbits
  +zin
  +zout
  +zstream
}

class __anona3e9b5c20108 {
  +num
  +size
}

class __anona3e9b5c20208 {
  +connection
  +last
  +limit
  +out
  +pool
}

class __anona40d4c300108 {
  +args
  +buf
  +flushed
  +ip
  +is_args
  +line
  +log
  +pos
  +quote
  +request
  +skip
  +sp
  +status
}

class __anona40d4c300208 {
  +args
  +captures_mask
  +cf
  +compile_args
  +complete_lengths
  +complete_values
  +conf_prefix
  +dup_capture
  +flushes
  +lengths
  +main
  +ncaptures
  +root_prefix
  +size
  +source
  +values
  +variables
  +zero
}

class __anona40d4c300308 {
  +flushes
  +lengths
  +u
  +value
  +values
}

class __anona40d4c300508 {
  +cf
  +complex_value
  +conf_prefix
  +root_prefix
  +value
  +zero
}

class __anona40d4c300608 {
  +code
  +len
}

class __anona40d4c300708 {
  +code
  +index
}

class __anona40d4c300808 {
  +code
  +data
  +handler
}

class __anona40d4c300908 {
  +code
  +n
}

class __anona40d4c300a08 {
  +add_args
  +args
  +break_cycle
  +code
  +lengths
  +name
  +negative_test
  +next
  +redirect
  +regex
  +size
  +status
  +test
  +uri
}

class __anona40d4c300b08 {
  +add_args
  +args
  +code
  +redirect
  +uri
}

class __anona40d4c300c08 {
  +code
  +conf_prefix
}

class __anona40d4c300d08 {
  +code
  +status
  +text
}

class __anona40d4c300f08 {
  +code
  +op
}

class __anona40d4c301008 {
  +code
  +loc_conf
  +next
}

class __anona40d4c301108 {
  +code
  +lengths
}

class __anona40d4c301208 {
  +code
  +text_data
  +text_len
  +value
}

class __anona499d4270108 {
  +city
  +city_v6
  +country
  +country_v6
  +org
  +org_v6
}

class __anona499d4270208 {
  +data
  +name
}

class __anona49b64c20108 {
  +end
  +pos
  +start
  +written
}

class __anona4a6a06b0108 {
  +a
  +b
  +buffer
  +bytes
  +c
  +d
}

class __anona83dae2b0108 {
  +handler
  +name
  +signame
  +signo
}

class __anona83dae300108 {
  +channel
  +data
  +detached
  +exited
  +exiting
  +just_spawn
  +name
  +pid
  +proc
  +respawn
  +status
}

class __anona83dae300208 {
  +argv
  +envp
  +name
  +path
}

class __anona84163970108 {
  +enable
  +ignore_recycled_buffers
  +last_modified
  +min_file_chunk
  +silent_errors
  +types
  +types_keys
  +value_len
}

class __anona84163970208 {
  +key
  +name
  +value
}

class __anona84163970308 {
  +bufs
  +count
  +name
}

class __anona841639c0108 {
  +commands
  +hash
}

class __anona841639c0208 {
  +block
  +blocks
  +buf
  +busy
  +captures
  +captures_data
  +command
  +conditional
  +copy_end
  +copy_start
  +encoding
  +errmsg
  +free
  +in
  +key
  +last_out
  +looked
  +ncaptures
  +out
  +output
  +output_chosen
  +param
  +params
  +params_array
  +pos
  +saved
  +saved_state
  +state
  +timefmt
  +value_buf
  +value_len
  +variables
  +wait
}

class __anona841639c0308 {
  +index
  +mandatory
  +multiple
  +name
}

class __anona841639c0408 {
  +block
  +conditional
  +flush
  +handler
  +name
  +params
}

class __anona9c31b050108 {
  +codes
  +log
  +stack_size
  +uninitialized_variable_warn
}

class __anonab2787080108 {
  +auth_capability
  +auth_methods
  +capabilities
  +capability
  +starttls_capability
  +starttls_only_capability
}

class __anonac11b63f0108 {
  +data
  +index
  +set_handler
  +value
}

class __anonac11b63f0208 {
  +commands
}

class __anonae92a4b10108 {
  +pools
}

class __anonae92a4b10208 {
  +first
  +last
}

class __anonb67d0f550108 {
  +addr
  +transparent
  +value
}

class __anonb67d0f550208 {
  +buffer_size
  +connect_timeout
  +download_rate
  +local
  +next_upstream
  +next_upstream_timeout
  +next_upstream_tries
  +proxy_protocol
  +requests
  +responses
  +socket_keepalive
  +ssl
  +ssl_certificate
  +ssl_certificate_key
  +ssl_ciphers
  +ssl_conf_commands
  +ssl_crl
  +ssl_enable
  +ssl_name
  +ssl_passwords
  +ssl_protocols
  +ssl_server_name
  +ssl_session_reuse
  +ssl_trusted_certificate
  +ssl_verify
  +ssl_verify_depth
  +timeout
  +upload_rate
  +upstream
  +upstream_value
}

class __anonb69a5a530108 {
  +flags
  +recv
  +recv_chain
  +send
  +send_chain
  +udp_recv
  +udp_send
  +udp_send_chain
}

class __anonb69a5a530208 {
  +count
  +iovs
  +nalloc
  +size
}

class __anonb8960a2b0108 {
  +addr
  +exists
  +log
  +name
  +size
}

class __anonbc12f8ea0108 {
  +busy
  +free
}

class __anonbc4fde150108 {
  +addr
  +deny
  +mask
}

class __anonbc4fde150208 {
  +addr
  +deny
  +mask
}

class __anonbc4fde150308 {
  +deny
}

class __anonbc4fde150408 {
  +rules
  +rules6
  +rules_un
}

class __anonc07dcb4f0108 {
  +addr
  +addrlen
  +get_rr_peer
  +hash
  +rrp
  +tries
}

class __anonc64d12690108 {
  +caches
}

class __anonc64d12690208 {
  +flushes
  +hash
  +lengths
  +number
  +values
}

class __anonc64d12690308 {
  +cache_key
  +params
  +params_cache
  +params_source
  +scgi_lengths
  +scgi_values
  +upstream
}

class __anonc659da580108 {
  +modules
  +nginx
  +perl
  +requires
}

class __anonc659da580208 {
  +handler
  +sub
}

class __anonc659da580308 {
  +handler
  +sub
}

class __anonc659da5d0108 {
  +done
  +error
  +filename
  +header_sent
  +next
  +redirect_uri
  +request
  +ssi
  +status
  +variable
  +variables
}

class __anonc659da5d0208 {
  +hash
  +name
  +value
}

class __anonc94bf7ef0108 {
  +color
  +conn
  +data
  +len
}

class __anonc94bf7ef0208 {
  +node
  +shm_zone
}

class __anonc94bf7ef0308 {
  +rbtree
  +sentinel
}

class __anonc94bf7ef0408 {
  +key
  +sh
  +shpool
}

class __anonc94bf7ef0508 {
  +conn
  +shm_zone
}

class __anonc94bf7ef0608 {
  +dry_run
  +limits
  +log_level
  +status_code
}

class __anoncf07e5e90108 {
  +cache
  +free
  +max_cached
  +original_init_peer
  +original_init_upstream
  +requests
  +timeout
}

class __anoncf07e5e90208 {
  +conf
  +connection
  +queue
  +sockaddr
  +socklen
}

class __anoncf07e5e90308 {
  +conf
  +data
  +original_free_peer
  +original_get_peer
  +original_save_session
  +original_set_session
  +upstream
}

class __anoncf54d40e0108 {
  +blocked_referer
  +hash
  +keys
  +no_referer
  +referer_hash_bucket_size
  +referer_hash_max_size
  +regex
  +server_name_regex
  +server_names
}

class __anoncf7b0b1c0108 {
  +changes
  +events
}

class __anoncfef02620108 {
  +aio_requests
  +events
}

class __anond09a433e0108 {
  +mirror
  +request_body
}

class __anond09a433e0208 {
  +status
}

class __anond2241dff0108 {
  +buf
  +chain
  +err
  +fd
  +nbytes
  +offset
  +size
  +write
}

class __anond2241e040108 {
  +addr
  +fd
  +log
  +name
  +size
}

class __anond2241e040208 {
  +de
  +dir
  +info
  +type
  +valid_info
}

class __anond2241e040308 {
  +log
  +n
  +pattern
  +pglob
  +test
}

class __anond6cf16ca0108 {
  +builtin_session_cache
  +certificate_key_values
  +certificate_keys
  +certificate_values
  +certificates
  +ciphers
  +client_certificate
  +conf_commands
  +crl
  +dhparam
  +ecdh_curve
  +file
  +handshake_timeout
  +line
  +listen
  +passwords
  +prefer_server_ciphers
  +protocols
  +session_ticket_keys
  +session_tickets
  +session_timeout
  +shm_zone
  +ssl
  +trusted_certificate
  +verify
  +verify_depth
}

class __anondd5f47740108 {
  +dir
  +escape
  +escape_html
  +file
  +mtime
  +name
  +size
  +utf_len
}

class __anondd5f47740208 {
  +enable
  +exact_size
  +format
  +localtime
}

class __anonddf2815f0108 {
  +recv_buffer
  +recv_buffer_size
}

class __anonddf2815f0208 {
  +concurrent_pushes
  +concurrent_streams
  +idle_timeout
  +max_field_size
  +max_header_size
  +max_requests
  +pool_size
  +preread_size
  +recv_timeout
  +streams_index_mask
}

class __anonddf2815f0308 {
  +chunk_size
  +push
  +push_preload
  +pushes
}

class __anondefabeb20108 {
  +file
  +header
  +headers
  +host_header
  +line
  +pass_client_cert
  +peer
  +timeout
  +uri
}

class __anondf44e8400108 {
  +error
  +event
  +ovlp
}

class __anondf44e8400208 {
  +add
  +add_conn
  +del
  +del_conn
  +disable
  +done
  +enable
  +init
  +notify
  +process_events
}

class __anondf44e8400308 {
  +accept_mutex
  +accept_mutex_delay
  +connections
  +debug_connection
  +multi_accept
  +name
  +use
}

class __anondf44e8400408 {
  +actions
  +create_conf
  +init_conf
  +name
}

class __anone1cc9e650108 {
  +bufs
  +enable
}

class __anone1cc9e650208 {
  +bufs
  +busy
  +done
  +flush
  +free
  +in
  +in_buf
  +last_out
  +nomem
  +out
  +out_buf
  +redo
  +request
  +started
  +zstream
}

class __anone3d63f010108 {
  +wProductType
  +wServicePackMinor
  +wSuiteMask
}

class __anone3ddf0ea0108 {
  +code
  +len
}

class __anone4ebd7040108 {
  +enable
}

class __anone56740e00108 {
  +end
  +failed
  +last
  +next
}

class __anone56740e00208 {
  +fd
  +log
  +name
}

class __anone70f07a40108 {
  +upstreams
}

class __anone70f07a40208 {
  +data
  +init
  +init_upstream
}

class __anone70f07a40308 {
  +addrs
  +backup
  +down
  +fail_timeout
  +max_conns
  +max_fails
  +naddrs
  +name
  +slow_start
  +weight
}

class __anone70f07a40408 {
  +bytes_received
  +bytes_sent
  +connect_time
  +first_byte_time
  +peer
  +response_time
}

class __anone70f07a40508 {
  +addrs
  +ctx
  +host
  +naddrs
  +name
  +no_port
  +port
  +sockaddr
  +socklen
}

class __anone70f07a40608 {
  +connected
  +download_rate
  +downstream_buf
  +downstream_busy
  +downstream_out
  +free
  +peer
  +proxy_protocol
  +received
  +requests
  +resolved
  +responses
  +ssl_name
  +start_sec
  +start_time
  +state
  +upload_rate
  +upstream
  +upstream_buf
  +upstream_busy
  +upstream_out
}

class __anone8f943820108 {
  +main_conf
  +srv_conf
}

class __anone8f943820208 {
  +addr_text
  +backlog
  +bind
  +ctx
  +ipv6only
  +rcvbuf
  +sndbuf
  +so_keepalive
  +sockaddr
  +socklen
  +ssl
  +tcp_keepcnt
  +tcp_keepidle
  +tcp_keepintvl
  +wildcard
}

class __anone8f943820308 {
  +addr_text
  +ctx
  +ssl
}

class __anone8f943820408 {
  +addr
  +conf
}

class __anone8f943820508 {
  +addr6
  +conf
}

class __anone8f943820608 {
  +addrs
  +naddrs
}

class __anone8f943820708 {
  +addrs
  +family
  +port
}

class __anone8f943820808 {
  +opt
}

class __anone8f943820908 {
  +listen
  +servers
}

class __anone8f943820a08 {
  +ctx
  +error_log
  +file_name
  +line
  +listen
  +protocol
  +resolver
  +resolver_timeout
  +server_name
  +timeout
}

class __anone8f943820e08 {
  +buffer
  +upstream
}

class __anone8f943820f08 {
  +addr_text
  +arg_end
  +arg_start
  +args
  +auth_method
  +auth_wait
  +backslash
  +blocked
  +buffer
  +cmd
  +cmd_start
  +command
  +connection
  +ctx
  +esmtp
  +host
  +literal_len
  +login
  +login_attempt
  +mail_state
  +main_conf
  +no_sync_literal
  +out
  +passwd
  +protocol
  +proxy
  +quit
  +quoted
  +resolver_ctx
  +salt
  +signature
  +smtp_from
  +smtp_helo
  +smtp_to
  +srv_conf
  +starttls
  +state
  +tag
  +tagged_line
  +text
}

class __anone8f943821008 {
  +client
  +session
}

class __anone8f943821108 {
  +create_main_conf
  +create_srv_conf
  +init_main_conf
  +merge_srv_conf
  +protocol
}

class __anonea6f92950108 {
  +hash
  +hh
  +name
  +offset
}

class __anonea6f92950208 {
}

class __anonea6f929a0108 {
  +name
  +value
}

class __anonea6f929a0208 {
  +buffer
  +buffer_used
  +field_end
  +field_rest
  +field_start
  +field_state
  +flags
  +handler
  +header
  +header_limit
  +incomplete
  +index
  +keep_pool
  +length
  +padding
  +parse_name
  +parse_value
  +pool
  +sid
  +stream
}

class __anonea6f929a0308 {
  +added
  +allocated
  +deleted
  +entries
  +free
  +pos
  +reused
  +size
  +storage
}

class __anoned4a68030108 {
  +from_downstream
  +from_upstream
}

class __anonee6d85140108 {
  +buffer_size
  +max_buffer_size
}

class __anonee6d85140208 {
  +chunk
  +id
  +samples
}

class __anonee6d85140308 {
  +chunks
  +co64_atom_buf
  +co64_data_buf
  +composition_offset_entries
  +ctts_atom_buf
  +ctts_data_buf
  +dinf_atom_buf
  +dinf_size
  +end_chunk
  +end_chunk_samples
  +end_chunk_samples_size
  +end_offset
  +end_sample
  +hdlr_atom_buf
  +hdlr_size
  +mdhd_atom_buf
  +mdhd_size
  +mdia_atom_buf
  +minf_atom_buf
  +out
  +sample_sizes_entries
  +sample_to_chunk_entries
  +size
  +smhd_atom_buf
  +smhd_size
  +start_chunk
  +start_chunk_samples
  +start_chunk_samples_size
  +start_offset
  +start_sample
  +stbl_atom_buf
  +stco_atom_buf
  +stco_data_buf
  +stsc_atom_buf
  +stsc_data_buf
  +stsc_end_chunk_buf
  +stsc_end_chunk_entry
  +stsc_start_chunk_buf
  +stsc_start_chunk_entry
  +stsd_atom_buf
  +stss_atom_buf
  +stss_data_buf
  +stsz_atom_buf
  +stsz_data_buf
  +stts_atom_buf
  +stts_data_buf
  +sync_samples_entries
  +time_to_sample_entries
  +timescale
  +tkhd_atom_buf
  +tkhd_size
  +trak_atom_buf
  +vmhd_atom_buf
  +vmhd_size
}

class __anonee6d85140408 {
  +buffer
  +buffer_end
  +buffer_pos
  +buffer_size
  +buffer_start
  +content_length
  +end
  +file
  +ftyp_atom
  +ftyp_atom_buf
  +ftyp_size
  +length
  +mdat_atom
  +mdat_atom_buf
  +mdat_atom_header
  +mdat_data
  +mdat_data_buf
  +moov_atom
  +moov_atom_buf
  +moov_atom_header
  +moov_size
  +mvhd_atom
  +mvhd_atom_buf
  +offset
  +out
  +request
  +start
  +timescale
  +trak
  +traks
}

class __anonee6d85140508 {
  +handler
  +name
}

class __anonee6d85140608 {
  +name
  +size
}

class __anonee6d85140708 {
  +name
  +size
  +size64
}

class __anonee6d85140808 {
  +creation_time
  +current_time
  +duration
  +flags
  +matrix
  +modification_time
  +name
  +next_track_id
  +poster_time
  +preview_duration
  +preview_time
  +rate
  +reserved
  +selection_duration
  +selection_time
  +size
  +timescale
  +version
  +volume
}

class __anonee6d85140908 {
  +creation_time
  +current_time
  +duration
  +flags
  +matrix
  +modification_time
  +name
  +next_track_id
  +poster_time
  +preview_duration
  +preview_time
  +rate
  +reserved
  +selection_duration
  +selection_time
  +size
  +timescale
  +version
  +volume
}

class __anonee6d85140a08 {
  +creation_time
  +duration
  +flags
  +group
  +height
  +layer
  +matrix
  +modification_time
  +name
  +reserved1
  +reserved2
  +reserved3
  +size
  +track_id
  +version
  +volume
  +width
}

class __anonee6d85140b08 {
  +creation_time
  +duration
  +flags
  +group
  +height
  +layer
  +matrix
  +modification_time
  +name
  +reserved1
  +reserved2
  +reserved3
  +size
  +track_id
  +version
  +volume
  +width
}

class __anonee6d85140c08 {
  +creation_time
  +duration
  +flags
  +language
  +modification_time
  +name
  +quality
  +size
  +timescale
  +version
}

class __anonee6d85140d08 {
  +creation_time
  +duration
  +flags
  +language
  +modification_time
  +name
  +quality
  +size
  +timescale
  +version
}

class __anonee6d85140e08 {
  +entries
  +flags
  +media_name
  +media_size
  +name
  +size
  +version
}

class __anonee6d85140f08 {
  +entries
  +flags
  +name
  +size
  +version
}

class __anonee6d85141008 {
  +count
  +duration
}

class __anonee6d85141108 {
  +entries
  +flags
  +name
  +size
  +version
}

class __anonee6d85141208 {
  +entries
  +flags
  +name
  +size
  +version
}

class __anonee6d85141308 {
  +count
  +offset
}

class __anonee6d85141408 {
  +entries
  +flags
  +name
  +size
  +version
}

class __anonee6d85141508 {
  +entries
  +flags
  +name
  +size
  +uniform_size
  +version
}

class __anonee6d85141608 {
  +entries
  +flags
  +name
  +size
  +version
}

class __anonee6d85141708 {
  +entries
  +flags
  +name
  +size
  +version
}

class __anonee9a5c5f0108 {
  +color
  +conn
  +data
  +len
}

class __anonee9a5c5f0208 {
  +node
  +shm_zone
}

class __anonee9a5c5f0308 {
  +rbtree
  +sentinel
}

class __anonee9a5c5f0408 {
  +key
  +sh
  +shpool
}

class __anonee9a5c5f0508 {
  +conn
  +shm_zone
}

class __anonee9a5c5f0608 {
  +dry_run
  +limits
  +log_level
}

class __anoneeb452b40108 {
  +domain
  +enable
  +expires
  +flags
  +mark
  +name
  +p3p
  +path
  +service
}

class __anoneeb452b40208 {
  +cookie
  +reset
  +uid_got
  +uid_set
}

class __anonefaffbfb0108 {
  +pcre_jit
}

class __anonefaffc000108 {
  +code
  +extra
}

class __anonefaffc000208 {
  +captures
  +err
  +name_size
  +named_captures
  +names
  +options
  +pattern
  +pool
  +regex
}

class __anonefaffc000308 {
  +name
  +regex
}

class __anonf1f69f060108 {
  +busy
  +conn
  +facility
  +nohostname
  +server
  +severity
  +tag
}

class __anonf229e3a40108 {
  +elts
  +nalloc
  +nelts
  +pool
  +size
}

class __anonf3da3e690108 {
  +directio
  +disable_symlinks
  +disable_symlinks_from
  +err
  +errors
  +events
  +failed
  +fd
  +fs_size
  +is_dir
  +is_directio
  +is_exec
  +is_file
  +is_link
  +log
  +min_uses
  +mtime
  +read_ahead
  +size
  +test_dir
  +test_only
  +uniq
  +valid
}

class __anonf3da3e690208 {
  +current
  +expire_queue
  +inactive
  +max
  +rbtree
  +sentinel
}

class __anonf3da3e690308 {
  +cache
  +file
  +log
  +min_uses
}

class __anonf3da3e690408 {
  +cache
  +data
  +fd
  +file
  +read
  +write
}

class __anonf6511b7b0108 {
  +bufs
}

class __anonfb0003f70108 {
  +hash
  +server
}

class __anonfb0003f70208 {
  +number
  +point
}

class __anonfb0003f70308 {
  +key
  +points
}

class __anonfb0003f70408 {
  +conf
  +get_rr_peer
  +hash
  +key
  +rehash
  +rrp
  +tries
}

class __anonfb637cb60108 {
  +realm
  +user_file
}

class __anonfc2cfd9e0108 {
  +end
  +start
  +value
}

class __anonfc2cfd9e0208 {
  +tree
  +tree6
}

class __anonfc2cfd9e0308 {
  +default_value
  +low
}

class __anonfc2cfd9e0408 {
  +offset
  +sn
  +value
}

class __anonfc2cfd9e0508 {
  +allow_binary_include
  +binary_include
  +data_size
  +entries
  +high
  +include_name
  +includes
  +net
  +outside_entries
  +pool
  +proxies
  +proxy_recursive
  +ranges
  +rbtree
  +sentinel
  +temp_pool
  +tree
  +tree6
  +value
}

class __anonfc2cfd9e0608 {
  +index
  +proxies
  +proxy_recursive
  +u
}

class __anonfc2cfd9e0808 {
  +crc32
  +endianness
  +GEORNG
  +ptr_size
  +version
}

class __anonfca152670108 {
  +hash
  +server
}

class __anonfca152670208 {
  +number
  +point
}

class __anonfca152670308 {
  +key
  +points
}

class __anonfca152670408 {
  +conf
  +get_rr_peer
  +hash
  +key
  +rehash
  +rrp
  +tries
}

class __anonfd5a2b140108 {
  +after_body
  +before_body
  +types
  +types_keys
}

class __anonfd5a2b140208 {
  +before_body_sent
}

class _TRANSMIT_FILE_BUFFERS {
  +Head
  +HeadLength
  +Tail
  +TailLength
}

class _TRANSMIT_PACKETS_ELEMENT {
  +cLength
  +dwElFlags
  +hFile
  +nFileOffset
}

class dvpoll {
  +dp_fds
  +dp_nfds
  +dp_timeout
}

class epoll_event {
  +data
  +events
}

class io_event {
  +data
  +obj
  +res
  +res2
}

class itimerspec {
  +it_interval
  +it_value
}

class ngx_buf_s {
  +end
  +file
  +file_last
  +file_pos
  +flush
  +in_file
  +last
  +last_buf
  +last_in_chain
  +last_shadow
  +memory
  +mmap
  +num
  +pos
  +recycled
  +shadow
  +start
  +sync
  +tag
  +temp_file
  +temporary
}

class ngx_cached_open_file_s {
  +accessed
  +close
  +count
  +created
  +disable_symlinks
  +disable_symlinks_from
  +err
  +event
  +fd
  +is_dir
  +is_directio
  +is_exec
  +is_file
  +is_link
  +mtime
  +name
  +node
  +queue
  +size
  +uniq
  +use_event
  +uses
}

class ngx_chain_s {
  +buf
  +next
}

class ngx_command_s {
  +conf
  +name
  +offset
  +post
  +set
  +type
}

class ngx_conf_s {
  +args
  +cmd_type
  +conf_file
  +ctx
  +cycle
  +handler
  +handler_conf
  +log
  +module_type
  +name
  +pool
  +temp_pool
}

class ngx_connection_s {
  +addr_text
  +buffer
  +buffered
  +busy_count
  +close
  +data
  +destroyed
  +error
  +fd
  +idle
  +listening
  +local_sockaddr
  +local_socklen
  +log
  +log_error
  +need_last_buf
  +number
  +pool
  +proxy_protocol
  +queue
  +read
  +recv
  +recv_chain
  +requests
  +reusable
  +send
  +send_chain
  +sendfile
  +sendfile_task
  +sent
  +shared
  +sndlowat
  +sockaddr
  +socklen
  +ssl
  +tcp_nodelay
  +tcp_nopush
  +timedout
  +type
  +udp
  +write
}

class ngx_cycle_s {
  +conf_ctx
  +conf_file
  +conf_param
  +conf_prefix
  +config_dump
  +config_dump_rbtree
  +config_dump_sentinel
  +connection_n
  +connections
  +connections_reuse_time
  +error_log
  +files
  +files_n
  +free_connection_n
  +free_connections
  +hostname
  +listening
  +lock_file
  +log
  +log_use_stderr
  +modules
  +modules_n
  +modules_used
  +new_log
  +old_cycle
  +open_files
  +paths
  +pool
  +prefix
  +read_events
  +reusable_connections_n
  +reusable_connections_queue
  +shared_memory
  +write_events
}

class ngx_event_aio_s {
  +aiocb
  +data
  +err
  +event
  +fd
  +file
  +handler
  +nbytes
  +preload_handler
  +res
}

class ngx_event_pipe_s {
  +aio
  +allocated
  +buf_to_file
  +bufs
  +busy
  +busy_size
  +cacheable
  +cyclic_temp_file
  +downstream
  +downstream_done
  +downstream_error
  +free
  +free_bufs
  +free_raw_bufs
  +in
  +input_ctx
  +input_filter
  +last_in
  +length
  +limit_rate
  +log
  +max_temp_file_size
  +num
  +out
  +output_ctx
  +output_filter
  +pool
  +preread_bufs
  +preread_size
  +read
  +read_length
  +read_timeout
  +send_lowat
  +send_timeout
  +single_buf
  +start_sec
  +tag
  +temp_file
  +temp_file_write_size
  +thread_ctx
  +thread_handler
  +thread_task
  +upstream
  +upstream_blocked
  +upstream_done
  +upstream_eof
  +upstream_error
  +writing
}

class ngx_event_s {
  +accept
  +active
  +available
  +cancelable
  +channel
  +closed
  +complete
  +data
  +deferred_accept
  +delayed
  +disabled
  +eof
  +error
  +handler
  +index
  +instance
  +kq_errno
  +kq_vnode
  +log
  +oneshot
  +ovlp
  +pending_eof
  +posted
  +queue
  +ready
  +resolver
  +timedout
  +timer
  +timer_set
  +write
}

class ngx_file_s {
  +aio
  +directio
  +fd
  +info
  +log
  +name
  +offset
  +sys_offset
  +thread_ctx
  +thread_handler
  +thread_task
  +valid_info
}

class ngx_http_addr_conf_s {
  +default_server
  +http2
  +proxy_protocol
  +ssl
  +virtual_names
}

class ngx_http_cache_s {
  +background
  +body_start
  +buf
  +buffer_size
  +crc32
  +date
  +error
  +error_sec
  +etag
  +exists
  +file
  +file_cache
  +fs_size
  +header_start
  +key
  +keys
  +last_modified
  +length
  +lock
  +lock_age
  +lock_time
  +lock_timeout
  +main
  +min_uses
  +node
  +purged
  +reading
  +secondary
  +stale_error
  +stale_updating
  +temp_file
  +thread_task
  +uniq
  +update_variant
  +updated
  +updating
  +updating_sec
  +valid_msec
  +valid_sec
  +variant
  +vary
  +vary_tag
  +wait_event
  +wait_time
  +waiting
}

class ngx_http_chunked_s {
  +length
  +size
  +state
}

class ngx_http_cleanup_s {
  +data
  +handler
  +next
}

class ngx_http_core_loc_conf_s {
  +absolute_redirect
  +aio
  +aio_write
  +alias
  +auth_delay
  +auto_redirect
  +chunked_transfer_encoding
  +client_body_buffer_size
  +client_body_in_file_only
  +client_body_in_single_buffer
  +client_body_temp_path
  +client_body_timeout
  +client_max_body_size
  +default_type
  +directio
  +directio_alignment
  +disable_symlinks
  +disable_symlinks_from
  +error_log
  +error_pages
  +etag
  +exact_match
  +gzip_disable
  +gzip_disable_degradation
  +gzip_disable_msie6
  +gzip_http_version
  +gzip_proxied
  +gzip_vary
  +handler
  +if_modified_since
  +internal
  +keepalive_disable
  +keepalive_header
  +keepalive_requests
  +keepalive_timeout
  +limit_except
  +limit_except_loc_conf
  +limit_rate
  +limit_rate_after
  +lingering_close
  +lingering_time
  +lingering_timeout
  +lmt_excpt
  +loc_conf
  +locations
  +log_not_found
  +log_subrequest
  +max_ranges
  +msie_padding
  +msie_refresh
  +name
  +named
  +noname
  +noregex
  +open_file_cache
  +open_file_cache_errors
  +open_file_cache_events
  +open_file_cache_min_uses
  +open_file_cache_valid
  +port_in_redirect
  +post_action
  +postpone_output
  +read_ahead
  +recursive_error_pages
  +regex
  +regex_locations
  +reset_timedout_connection
  +resolver
  +resolver_timeout
  +root
  +root_lengths
  +root_values
  +satisfy
  +send_lowat
  +send_timeout
  +sendfile
  +sendfile_max_chunk
  +server_name_in_redirect
  +server_tokens
  +static_locations
  +subrequest_output_buffer_size
  +tcp_nodelay
  +tcp_nopush
  +thread_pool
  +thread_pool_value
  +types
  +types_hash
  +types_hash_bucket_size
  +types_hash_max_size
}

class ngx_http_file_cache_s {
  +bsize
  +fail_time
  +files
  +inactive
  +last
  +loader_files
  +loader_sleep
  +loader_threshold
  +manager_files
  +manager_sleep
  +manager_threshold
  +max_size
  +min_free
  +path
  +sh
  +shm_zone
  +shpool
  +use_temp_path
}

class ngx_http_header_val_s {
  +always
  +handler
  +key
  +offset
  +value
}

class ngx_http_location_tree_node_s {
  +auto_redirect
  +exact
  +inclusive
  +left
  +len
  +name
  +right
  +tree
}

class ngx_http_log_ctx_s {
  +connection
  +current_request
  +request
}

class ngx_http_log_op_s {
  +data
  +getlen
  +len
  +run
}

class ngx_http_phase_handler_s {
  +checker
  +handler
  +next
}

class ngx_http_posted_request_s {
  +next
  +request
}

class ngx_http_postponed_request_s {
  +next
  +out
  +request
}

class ngx_http_proxy_rewrite_s {
  +handler
  +pattern
  +replacement
}

class ngx_http_request_s {
  +access_code
  +add_uri_to_alias
  +aio
  +allow_ranges
  +args
  +args_start
  +background
  +blocked
  +buffered
  +bypass_cache
  +cache
  +cached
  +captures
  +captures_data
  +chunked
  +cleanup
  +complex_uri
  +connection
  +content_handler
  +count
  +ctx
  +disable_not_modified
  +discard_body
  +done
  +empty_path_in_uri
  +err_status
  +error_page
  +expect_tested
  +expect_trailers
  +exten
  +filter_finalize
  +filter_need_in_memory
  +filter_need_temporary
  +gzip_ok
  +gzip_tested
  +gzip_vary
  +header_end
  +header_hash
  +header_in
  +header_name_end
  +header_name_start
  +header_only
  +header_sent
  +header_size
  +header_start
  +headers_in
  +headers_out
  +health_check
  +host_end
  +host_start
  +http_connection
  +http_major
  +http_minor
  +http_protocol
  +http_state
  +http_version
  +internal
  +invalid_header
  +keepalive
  +limit_conn_status
  +limit_rate
  +limit_rate_after
  +limit_rate_after_set
  +limit_rate_set
  +limit_req_status
  +lingering_close
  +lingering_time
  +loc_conf
  +log_handler
  +logged
  +lowcase_header
  +lowcase_index
  +main
  +main_conf
  +main_filter_need_in_memory
  +method
  +method_end
  +method_name
  +ncaptures
  +no_cache
  +out
  +parent
  +phase_handler
  +pipeline
  +plus_in_uri
  +pool
  +port_end
  +port_start
  +post_action
  +post_subrequest
  +posted_requests
  +postponed
  +preserve_body
  +proxy
  +quoted_uri
  +read_event_handler
  +reading_body
  +realloc_captures
  +request_body
  request_body_file_group_access
  +request_body_file_log_level
  +request_body_in_clean_file
  +request_body_in_file_only
  +request_body_in_persistent_file
  +request_body_in_single_buf
  +request_body_no_buffering
  +request_complete
  +request_end
  +request_length
  +request_line
  +request_output
  +request_start
  +root_tested
  +schema
  +schema_end
  +schema_start
  +signature
  +single_range
  +space_in_uri
  +srv_conf
  +start_msec
  +start_sec
  +stat_processing
  +stat_reading
  +stat_writing
  +state
  +stream
  +subrequest_in_memory
  +subrequest_ranges
  +subrequests
  +unparsed_uri
  +upstream
  +upstream_states
  +uri
  +uri_changed
  +uri_changes
  +uri_end
  +uri_ext
  +uri_start
  +valid_location
  +valid_unparsed_uri
  +variables
  +waited
  +write_event_handler
}

class ngx_http_upstream_rr_peer_s {
  +accessed
  +checked
  +conns
  +current_weight
  +down
  +effective_weight
  +fail_timeout
  +fails
  +lock
  +max_conns
  +max_fails
  +name
  +next
  +server
  +slow_start
  +sockaddr
  +socklen
  +ssl_session
  +ssl_session_len
  +start_time
  +weight
}

class ngx_http_upstream_rr_peers_s {
  +name
  +next
  +number
  +peer
  +rwlock
  +shpool
  +single
  +total_weight
  +tries
  +weighted
  +zone_next
}

class ngx_http_upstream_s {
  +abort_request
  +accel
  +buffer
  +buffering
  +busy_bufs
  +cache_status
  +cacheable
  +caches
  +cleanup
  +conf
  +create_key
  +create_request
  +error
  +finalize_request
  +free_bufs
  +from_client
  +header_sent
  +headers_in
  +input_filter
  +input_filter_ctx
  +input_filter_init
  +keepalive
  +length
  +method
  +out_bufs
  +output
  +peer
  +pipe
  +process_header
  +read_event_handler
  +reinit_request
  +request_body_blocked
  +request_body_sent
  +request_bufs
  +request_sent
  +resolved
  +rewrite_cookie
  +rewrite_redirect
  +schema
  +ssl
  +ssl_name
  +start_time
  +state
  +store
  +upgrade
  +upstream
  +uri
  +write_event_handler
  +writer
}

class ngx_http_upstream_srv_conf_s {
  +file_name
  +flags
  +host
  +line
  +no_port
  +peer
  +port
  +servers
  +shm_zone
  +srv_conf
}

class ngx_http_v2_connection_s {
  +blocked
  +closed
  +closed_nodes
  +concurrent_pushes
  +connection
  +dependencies
  +frame_size
  +frames
  +free_fake_connections
  +free_frames
  +goaway
  +hpack
  +http_connection
  +idle
  +init_window
  +last_out
  +last_push
  +last_sid
  +lingering_time
  +payload_bytes
  +pool
  +priority_limit
  +processing
  +push_disabled
  +pushing
  +recv_window
  +send_window
  +settings_ack
  +state
  +streams_index
  +table_update
  +total_bytes
  +waiting
}

class ngx_http_v2_node_s {
  +children
  +id
  +index
  +parent
  +queue
  +rank
  +rel_weight
  +reuse
  +stream
  +weight
}

class ngx_http_v2_out_frame_s {
  +blocked
  +fin
  +first
  +handler
  +last
  +length
  +next
  +stream
}

class ngx_http_v2_stream_s {
  +blocked
  +connection
  +cookies
  +exhausted
  +frames
  +free_bufs
  +free_frame_headers
  +free_frames
  +in_closed
  +no_flow_control
  +node
  +out_closed
  +pool
  +preread
  +queue
  +queued
  +recv_window
  +request
  +rst_sent
  +send_window
  +skip_data
  +waiting
}

class ngx_http_variable_s {
  +data
  +flags
  +get_handler
  +index
  +name
  +set_handler
}

class ngx_list_part_s {
  +elts
  +nelts
  +next
}

class ngx_listening_s {
  +accept_filter
  +add_deferred
  +add_reuseport
  +addr_ntop
  +addr_text
  +addr_text_max_len
  +backlog
  +bound
  +connection
  +deferred_accept
  +delete_deferred
  +fastopen
  +fd
  +handler
  +ignore
  +inherited
  +ipv6only
  +keepalive
  +keepcnt
  +keepidle
  +keepintvl
  +listen
  +log
  +logp
  +nonblocking
  +nonblocking_accept
  +open
  +pool_size
  +post_accept_buffer_size
  +previous
  +rbtree
  +rcvbuf
  +remain
  +reuseport
  +sentinel
  +servers
  +setfib
  +shared
  +sndbuf
  +sockaddr
  +socklen
  +type
  +wildcard
  +worker
}

class ngx_log_s {
  +action
  +connection
  +data
  +disk_full_time
  +file
  +handler
  +log_level
  +next
  +wdata
  +writer
}

class ngx_mail_auth_http_ctx_s {
  +addr
  +err
  +errcode
  +errmsg
  +handler
  +header_end
  +header_name_end
  +header_name_start
  +header_start
  +peer
  +pool
  +port
  +request
  +response
  +sleep
  +state
}

class ngx_mail_protocol_s {
  +auth_state
  +cert_error
  +init_protocol
  +init_session
  +internal_server_error
  +name
  +no_cert
  +parse_command
  +port
  +type
}

class ngx_module_s {
  +commands
  +ctx
  +ctx_index
  +exit_master
  +exit_process
  +exit_thread
  +index
  +init_master
  +init_module
  +init_process
  +init_thread
  +name
  +signature
  +spare0
  +spare1
  +spare_hook0
  +spare_hook1
  +spare_hook2
  +spare_hook3
  +spare_hook4
  +spare_hook5
  +spare_hook6
  +spare_hook7
  +type
  +version
}

class ngx_open_file_s {
  +data
  +fd
  +flush
  +name
}

class ngx_output_chain_ctx_s {
  +aio
  +aio_handler
  +aio_preload
  +alignment
  +allocated
  +buf
  +bufs
  +busy
  +directio
  +filter_ctx
  +free
  +in
  +need_in_memory
  +need_in_temp
  +output_filter
  +pool
  +sendfile
  +tag
  +thread_handler
  +thread_task
  +unaligned
}

class ngx_peer_connection_s {
  +cached
  +connection
  +data
  +down
  +free
  +get
  +local
  +log
  +log_error
  +name
  +notify
  +rcvbuf
  +save_session
  +set_session
  +so_keepalive
  +sockaddr
  +socklen
  +start_time
  +transparent
  +tries
  +type
}

class ngx_pool_cleanup_s {
  +data
  +handler
  +next
}

class ngx_pool_large_s {
  +alloc
  +next
}

class ngx_pool_s {
  +chain
  +cleanup
  +current
  +d
  +large
  +log
  +max
}

class ngx_proxy_protocol_s {
  +dst_addr
  +dst_port
  +src_addr
  +src_port
}

class ngx_queue_s {
  +next
  +prev
}

class ngx_radix_node_s {
  +left
  +parent
  +right
  +value
}

class ngx_rbtree_node_s {
  +color
  +data
  +key
  +left
  +parent
  +right
}

class ngx_rbtree_s {
  +insert
  +root
  +sentinel
}

class ngx_resolver_ctx_s {
  +addr
  +addrs
  +async
  +cancelable
  +count
  +data
  +event
  +handler
  +ident
  +naddrs
  +name
  +next
  +node
  +nsrvs
  +quick
  +recursion
  +resolver
  +service
  +sin
  +srvs
  +state
  +timeout
  +valid
}

class ngx_resolver_s {
  +addr6_expire_queue
  +addr6_rbtree
  +addr6_resend_queue
  +addr6_sentinel
  +addr_expire_queue
  +addr_rbtree
  +addr_resend_queue
  +addr_sentinel
  +connections
  +dummy
  +event
  +expire
  +ident
  +ipv6
  +last_connection
  +log
  +log_level
  +name_expire_queue
  +name_rbtree
  +name_resend_queue
  +name_sentinel
  +resend_timeout
  +srv_expire_queue
  +srv_rbtree
  +srv_resend_queue
  +srv_sentinel
  +tcp_timeout
  +valid
}

class ngx_shm_zone_s {
  +data
  +init
  +noreuse
  +shm
  +sync
  +tag
}

class ngx_slab_page_s {
  +next
  +prev
  +slab
}

class ngx_ssl_connection_s {
  +buf
  +buffer
  +buffer_size
  +connection
  +early_buf
  +early_preread
  +handler
  +handshake_buffer_set
  +handshake_rejected
  +handshaked
  +in_early
  +in_ocsp
  +last
  +no_send_shutdown
  +no_wait_shutdown
  +ocsp
  +renegotiation
  +save_session
  +saved_read_handler
  +saved_write_handler
  +session
  +session_ctx
  +try_early_data
  +write_blocked
}

class ngx_ssl_ocsp_ctx_s {
  +addrs
  +cert
  +code
  +count
  +data
  +done
  +flags
  +handler
  +header_end
  +header_name_end
  +header_name_start
  +header_start
  +host
  +issuer
  +key
  +log
  +naddr
  +naddrs
  +name
  +peer
  +pool
  +port
  +process
  +request
  +resolver
  +resolver_timeout
  +response
  +shm_zone
  +ssl_ctx
  +state
  +status
  +timeout
  +uri
  +valid
}

class ngx_ssl_ocsp_s {
  +cert_status
  +conf
  +ctx
  +ncert
  +status
}

class ngx_ssl_s {
  +buffer_size
  +ctx
  +log
}

class ngx_ssl_sess_id_s {
  +expire
  +id
  +len
  +node
  +queue
  +sess_id
  +session
  +stub
}

class ngx_stream_log_op_s {
  +data
  +getlen
  +len
  +run
}

class ngx_stream_phase_handler_s {
  +checker
  +handler
  +next
}

class ngx_stream_session_s {
  +captures
  +captures_data
  +connection
  +ctx
  +health_check
  +limit_conn_status
  +log_handler
  +main_conf
  +ncaptures
  +phase_handler
  +received
  +signature
  +srv_conf
  +ssl
  +start_msec
  +start_sec
  +stat_processing
  +status
  +upstream
  +upstream_states
  +variables
}

class ngx_stream_upstream_rr_peer_s {
  +accessed
  +checked
  +conns
  +current_weight
  +down
  +effective_weight
  +fail_timeout
  +fails
  +lock
  +max_conns
  +max_fails
  +name
  +next
  +server
  +slow_start
  +sockaddr
  +socklen
  +ssl_session
  +ssl_session_len
  +start_time
  +weight
}

class ngx_stream_upstream_rr_peers_s {
  +name
  +next
  +number
  +peer
  +rwlock
  +shpool
  +single
  +total_weight
  +tries
  +weighted
  +zone_next
}

class ngx_stream_upstream_srv_conf_s {
  +file_name
  +flags
  +host
  +line
  +no_port
  +peer
  +port
  +servers
  +shm_zone
  +srv_conf
}

class ngx_stream_variable_s {
  +data
  +flags
  +get_handler
  +index
  +name
  +set_handler
}

class ngx_thread_pool_s {
  +cond
  +file
  +line
  +log
  +max_queue
  +mtx
  +name
  +queue
  +threads
  +waiting
}

class ngx_thread_task_s {
  +ctx
  +event
  +handler
  +id
  +next
}

class ngx_tree_ctx_s {
  +access
  +alloc
  +data
  +file_handler
  +fs_size
  +init_handler
  +log
  +mtime
  +post_tree_handler
  +pre_tree_handler
  +size
  +spec_handler
}

class ngx_udp_connection_s {
  +buffer
  +connection
  +node
}

class pollfd {
  +events
  +fd
  +revents
}

class port_notify {
  +portnfy_port
  +portnfy_user
}

class sendfilevec {
  +sfv_fd
  +sfv_flag
  +sfv_len
  +sfv_off
}

@enduml